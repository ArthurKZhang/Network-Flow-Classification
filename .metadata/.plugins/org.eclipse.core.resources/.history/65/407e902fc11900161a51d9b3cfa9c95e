package arthur.service.classification;

import java.util.List;

import arthur.bean.data.BoF;
import arthur.bean.data.FlowFeatureVector;

public class MINDis implements Distance {

	@Override
	public double getDistance(List<FlowFeatureVector> tranList, BoF testBof) {
		List<FlowFeatureVector> testlist = testBof.getFlowFeaVectorList();
		for(int i = 0;i<testlist.size();i++){
			System.out.println("&&&"+testlist.get(i));
		}
		double min = Double.MAX_VALUE;
		for (FlowFeatureVector bv : testlist) {
			double[] b = vector2Array(bv);
			for (FlowFeatureVector tv : tranList) {
				double[] t = vector2Array(tv);
				double dis = 0;
				// ¼ÆËã¾àÀë
				for(int i = 0;i<b.length;i++){
					dis += BigDecimalCalculate.mul(b[i]-t[i], b[i]-t[i]);
				}
				dis = Math.sqrt(dis);
				// ¸üÐÂmin
				if(dis<min){
					min = dis;
				}
			}
		}
		
		return min;
	}
	
	
}
