package arthur.service.classification;

import java.util.List;

import arthur.bean.data.BoF;
import arthur.bean.data.FlowFeatureVector;

public class MINDis implements Distance {

	@Override
	public double getDistance(List<FlowFeatureVector> tranList, BoF testBof) {
		List<FlowFeatureVector> testlist = testBof.getFlowFeaVectorList();
		double min = Double.MAX_VALUE;
		for (FlowFeatureVector bv : testlist) {
			for (FlowFeatureVector tv : tranList) {
				double[] b = vector2Array(bv);
				double[] t = vector2Array(tv);
				double dis = 0;
				// º∆À„æ‡¿Î
				for(int i = 0;i<b.length;i++){
					dis += BigDecimalCalculate.mul(b[i]-t[i], b[i]-t[i]);
				}
				dis = Math.sqrt(dis);
				// ∏¸–¬min
				if(dis<min){
					min = dis;
				}
			}
		}

		return min;
	}
}
