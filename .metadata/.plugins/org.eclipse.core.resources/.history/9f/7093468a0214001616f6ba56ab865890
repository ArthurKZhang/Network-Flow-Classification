package arthur.dao.Mongo;

import org.bson.Document;

import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

import arthur.bean.data.FlowFeatureVector;

public class DBHelperBOF implements ConfigBOF {
//	public static 
	
	public static void createCollection() {
		MongoClient mongoClient = new MongoClient(HOST, PORT);
		MongoDatabase db = mongoClient.getDatabase(DB_NAME);
		try {
			db.createCollection(COLLECTION_NAME);
			System.out.println("Collection--" + COLLECTION_NAME + "--created");
		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ": " + e.getMessage());
		} finally {
			mongoClient.close();
		}
	}

	public static boolean save(FlowFeatureVector fv) {
		MongoClient mongoClient = new MongoClient(HOST, PORT);
		MongoDatabase mongoDatabase = mongoClient.getDatabase(DB_NAME);
		try {
			MongoCollection<Document> collection = mongoDatabase.getCollection(COLLECTION_NAME);
			Document fVector = new Document("desAddress",fv.get_3tuple().getDesAddress())
					.append("desPort", fv.get_3tuple().getDesPort())
					.append("protocol", fv.get_3tuple().getProtocol())
					.append("pSize", fv.getSize_packet())
					.append("bSize", fv.getSize_bytes())
					.append("pMin", fv.getMin_size())
					.append("pMax", fv.getMax_size())
					.append("pMean", fv.getMean_size())
					.append("pDev", fv.getStdDev_size())
					.append("tMin", fv.getMin_time())
					.append("tMax", fv.getMax_time())
					.append("tMean", fv.getMean_time())
					.append("tDev", fv.getStdDev_time());
			collection.insertOne(fVector);
			return true;
		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ": " + e.getMessage());
			return false;
		}finally {
			mongoClient.close();
		}
	}
}
